import 'package:flutter/material.dart';
import 'package:second_app/answer_button.dart';
import 'package:second_app/data/questions.dart';
import 'package:google_fonts/google_fonts.dart';

class QuestionsScreen extends StatefulWidget {
  const QuestionsScreen({super.key, required this.onSelectAnswer});

  final void Function(String answer) onSelectAnswer;

  @override
  State<QuestionsScreen> createState() {
    return _QeustionsScreenState();
  }
}

class _QeustionsScreenState extends State<QuestionsScreen> {

  var currentQuestionIndex = 0;

  void answerQuestion(String selectedAnswer) {
    /*
    üîπ –ß—Ç–æ —Ç–∞–∫–æ–µ widget –≤–Ω—É—Ç—Ä–∏ _QuestionsScreenState

      –í –∫–ª–∞—Å—Å–µ _QuestionsScreenState —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—è–º QuestionsScreen
      (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫ onSelectAnswer).
      Flutter —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–∞—ë—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π StatefulWidget —á–µ—Ä–µ–∑ —Å–≤–æ–π—Å—Ç–≤–æ widget.

      –¢–æ –µ—Å—Ç—å:
      widget ‚Üí —ç—Ç–æ –æ–±—ä–µ–∫—Ç QuestionsScreen, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω.
      –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, widget.onSelectAnswer ‚Üí —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—É, 
      –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–µ—Ä–µ–¥–∞–ª –≤ QuestionsScreen –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏.
    */
    widget.onSelectAnswer(selectedAnswer);
    setState(() {
      currentQuestionIndex ++;
    });
  }

  @override
  Widget build(BuildContext context) {

    final currentQuestion = questions[currentQuestionIndex]; // acces to the first element in list
    return SizedBox(
      // alternitive to Center - wrapper
      width: double
          .infinity, // use as much width as you can, be as wide as possible
      child: Container(
        margin: const EdgeInsets.all(30), // space between and  elements 
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch, // items inside stretch out to be as wide as possible
          children: [
            Text(
              currentQuestion.text,
               // style: TextStyle(color: Colors.white),
               style: GoogleFonts.lato(
                color: Colors.white,
                fontSize: 24,
                fontWeight: FontWeight.bold,
               ),
               textAlign: TextAlign.center,

              ),
        
            SizedBox(height: 30),
        
        
        // .map() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Iterable<Widget>, —Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∏–¥–∂–µ—Ç–æ–≤, –Ω–æ —Å–∞–º –ø–æ —Å–µ–±–µ —ç—Ç–æ –Ω–µ Widget.
        // –ê children: [] —É Column —Ç—Ä–µ–±—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω–Ω–æ Widget, –∞ –Ω–µ Iterable.
        // ... - spread operator —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã Iterable –ø—Ä—è–º–æ –≤–Ω—É—Ç—Ä—å —Å–ø–∏—Å–∫–∞:
            ...currentQuestion.getShuffledAnswers().map((answer) {
                return AnswerButton(
                  answerText: answer, 
                  onTap: () {
                    answerQuestion(answer);
                  });
            }),
          ],
        ),
      ),
    );
  }
}
